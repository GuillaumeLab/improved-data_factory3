{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AzureBlobStorage1": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/landed_check')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.exists",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get Metadata1",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "landedCustomer",
											"type": "DatasetReference",
											"parameters": {
												"folderPartition": {
													"value": "@pipeline().parameters.partition",
													"type": "Expression"
												},
												"subfolder": {
													"value": "@pipeline().parameters.subfolder_path",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "DelimitedTextReadSettings"
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Metadata1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('Get Metadata1').output.exists",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Wait1",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 60
												}
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"parameters": {
					"partition": {
						"type": "string"
					},
					"subfolder_path": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Helpers"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-04T14:49:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/landedCustomer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landedCustomer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AzureBlobStorage1')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folderPartition": {
						"type": "string",
						"defaultValue": "20210704"
					},
					"subfolder": {
						"type": "string",
						"defaultValue": "customer/fr/"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('customers_',formatDateTime(utcnow(),'yyyyMMdd'),'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('landed/',dataset().subfolder,'ingestdatetime=',dataset().folderPartition)",
							"type": "Expression"
						},
						"container": "containerdxctest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerID",
						"type": "String"
					},
					{
						"name": "Genre",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "effectiveDate",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}